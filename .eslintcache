[{"/home/ec2-user/environment/react-sample/src/index.js":"1","/home/ec2-user/environment/react-sample/src/App.js":"2","/home/ec2-user/environment/react-sample/src/reportWebVitals.js":"3","/home/ec2-user/environment/react-sample/src/components/Todo.js":"4","/home/ec2-user/environment/react-sample/src/hooks/fbStorage.js":"5","/home/ec2-user/environment/react-sample/src/components/TodoItem.js":"6","/home/ec2-user/environment/react-sample/src/components/Input.js":"7","/home/ec2-user/environment/react-sample/src/components/Filter.js":"8","/home/ec2-user/environment/react-sample/src/lib/util.js":"9","/home/ec2-user/environment/react-sample/src/lib/firebase.js":"10","/home/ec2-user/environment/react-sample/src/components/Login.js":"11","/home/ec2-user/environment/react-sample/src/components/Upload.js":"12"},{"size":500,"mtime":1621591419676,"results":"13","hashOfConfig":"14"},{"size":1618,"mtime":1621593522023,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1621591419676,"results":"16","hashOfConfig":"14"},{"size":1816,"mtime":1621592425546,"results":"17","hashOfConfig":"14"},{"size":1061,"mtime":1621592464118,"results":"18","hashOfConfig":"14"},{"size":591,"mtime":1621591419676,"results":"19","hashOfConfig":"14"},{"size":634,"mtime":1621591419676,"results":"20","hashOfConfig":"14"},{"size":910,"mtime":1621591419676,"results":"21","hashOfConfig":"14"},{"size":68,"mtime":1621591419676,"results":"22","hashOfConfig":"14"},{"size":2520,"mtime":1621593377928,"results":"23","hashOfConfig":"14"},{"size":362,"mtime":1621592855479,"results":"24","hashOfConfig":"14"},{"size":1717,"mtime":1621592644569,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"jg7vpy",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"28"},"/home/ec2-user/environment/react-sample/src/index.js",[],["58","59"],"/home/ec2-user/environment/react-sample/src/App.js",[],"/home/ec2-user/environment/react-sample/src/reportWebVitals.js",[],"/home/ec2-user/environment/react-sample/src/components/Todo.js",["60","61"],"import React, { useState } from 'react';\n/* \n  【Todoのデータ構成】\n　・key：Todoを特定するID（String）\n　・text：Todoの内容（String）\n　・done：完了状態（Boolean true:完了済み,, false:未完了）\n*/\n\n/* コンポーネント */\nimport TodoItem from './TodoItem';\nimport Input from './Input';\nimport Filter from './Filter';\n\n/* カスタムフック */\nimport useFbStorage from '../hooks/fbStorage';\n\n/* ライブラリ */\nimport {getKey} from \"../lib/util\";\n\nfunction Todo() {\n  const [items, addItem, updateItem, clearItems] = useFbStorage();\n\n  const [filter, setFilter] = useState('ALL');\n  \n  const itemsFilter = items.filter(item => {\n    if (filter === 'ALL') return true\n    if (filter === 'TODO') return !item.done\n    if (filter === 'DONE') return item.done\n  })\n\n\n  \n  const addTodo = (data) => {\n    addItem({'text': data, 'done': false});\n  }\n  \n  const changeStatus = (data) => {\n    // const newItems = items.map(item => {\n    //   return item.key === data.key ? {...item, done: !item.done} : item\n    // })\n    // putItems(newItems);\n    updateItem(data);\n  }\n  \n  const changeFilterHandler = (value) => {\n    setFilter(value)\n  }\n\n  return (\n    <div className=\"panel\">\n      <div className=\"panel-heading\">\n        ITSS ToDoアプリ\n      </div>\n      <Input addTodo={addTodo}/>\n      <Filter onChange={changeFilterHandler} value={filter} />\n      {itemsFilter.map(item => (\n        <TodoItem item={item} key={item.key} changeStatus={() =>  changeStatus(item)}/>\n      ))}\n      <div className=\"panel-block\">\n         {itemsFilter.length} items\n      </div>\n       <div className='panel-block'>\n        <button className='button is-fullwidth is-light' onClick={clearItems}>全てのTodoを削除</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Todo;\n","/home/ec2-user/environment/react-sample/src/hooks/fbStorage.js",["62"],"import { useState, useEffect } from 'react';\n\nimport { addFirebaseItem, updateFirebaseItem, getFirebaseItems, clearFirebaseItem } from \"../lib/firebase\";\n\nfunction useFbStorage() {\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n    getItems();\n  }, [items]);\n\n  const getItems = async () => {\n    const _items = await getFirebaseItems();\n    setItems(_items);\n  };\n\n  const addItem = async item => {\n    const newItem = { text: item.text, done: item.done };\n    await addFirebaseItem(newItem);\n    setItems([...items, newItem]);\n  };\n\n  const updateItem = async checked => {\n    const changes = { done: !checked.done };\n    await updateFirebaseItem(changes, checked.id);\n    const newItems = items.map((item) => {\n      if (item.id === checked.id) {\n        item = { ...item, changes}\n      }\n      return item;\n    })\n    setItems(newItems);\n  }\n\n  const clearItems = () => {\n    items.map(item => {\n      clearFirebaseItem(item);\n    })\n    setItems([]);\n  };\n\n  return [items, addItem, updateItem, clearItems];\n}\n\nexport default useFbStorage;","/home/ec2-user/environment/react-sample/src/components/TodoItem.js",["63"],"/* \n  【TodoItemコンポーネント】\n　・Todoアイテムを表示する\n　・チェックボックスにチェックが入っているか管理する\n　・チェックボックスにチェックが入っているかアイテムをグレーアウトする\n*/\nconst handleClickChecBox = (key) => {\n};\n\nfunction TodoItem({item, changeStatus} ) {\n  return (\n    <label className={`panel-block ${item.done? 'has-text-grey-light': \"\"}`}>\n            <input type=\"checkbox\" checked={item.done} onClick={changeStatus}/>\n            {item.text}\n    </label>\n  );\n}\n\nexport default TodoItem;","/home/ec2-user/environment/react-sample/src/components/Input.js",["64"],"import React, { useState } from 'react';\n/* \n  【inputコンポーネント】\n　・新しいTodoを作成するINPUTフィールドを作成するコンポーネント\n　・Enterをクリックされたら入力された文字を使って新しいTodoを作成する\n*/\nfunction Input( { addTodo } ) {\n\n  const handleKeyUp = (event) => {\n    if(event.keyCode === 13){\n      addTodo(event.target.value);\n      event.target.value = \"\"\n    }\n  }\n  return (\n    <div className=\"panel-block\">\n      <input \n        type=\"text\"\n        className=\"input\"\n        onKeyUp = {handleKeyUp}\n      />\n    </div>\n  );\n}\n\nexport default Input;\n","/home/ec2-user/environment/react-sample/src/components/Filter.js",["65","66","67"],"/* \n  【Filterコンポーネント】\n　・該当するTodoをステータス毎にで分けてリスト表示する\n　・タブで表示する\n　・サポートするステータスは「すべて」「未完了」「完了済み」\n*/\nfunction Filter({ value, onChange }) {\n  \n  const clickHandler = (key, e) => {\n    e.preventDefault()\n    onChange(key)\n  }\n  \n  return (\n    <div className=\"panel-tabs\">\n      <a \n        href='#'\n        className={value === 'ALL' ? 'is-active': ''}\n        onClick={clickHandler.bind(null, 'ALL')}\n      >全て</a>\n      <a \n        href='#'\n        className={value === 'TODO' ? 'is-active': ''}\n        onClick={clickHandler.bind(null, 'TODO')}\n      >未完了</a>\n      <a \n        href='#'\n        className={value === 'DONE' ? 'is-active': ''}\n        onClick={clickHandler.bind(null, 'DONE')}\n      >完了済み</a>\n    </div>\n  );\n}\n\nexport default Filter","/home/ec2-user/environment/react-sample/src/lib/util.js",[],"/home/ec2-user/environment/react-sample/src/lib/firebase.js",[],"/home/ec2-user/environment/react-sample/src/components/Login.js",["68"],"import React from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\n/* ライブラリ */\nimport { firebase, auth, uiConfig } from \"../lib/firebase\";\n\nfunction Login() {\n  return (\n    <div className=\"column panel-block\">\n      <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={auth} />\n    </div>\n  );\n};\n\nexport default Login;","/home/ec2-user/environment/react-sample/src/components/Upload.js",["69"],"import React, { useState } from 'react'\n\n/* ライブラリ */\nimport { uploadImage } from \"../lib/firebase\";\n\nfunction Upload({ userImage, onSletctedImage }) {\n  const [isModal, setIsModal] = useState(false);\n  const active = isModal ? \"is-active\" : \"\";\n  const [imageUrl, setImageUrl] = useState(userImage);\n\n  const handleImage = async event => {\n    const image = event.target.files[0];\n    const imageUrl = await uploadImage(image);\n    onSletctedImage(imageUrl);\n    setImageUrl(imageUrl);\n  };\n\n  const handleClick = () => {\n    setIsModal(!isModal);\n  };\n\n  const ImageViewer = () => {\n    if (!imageUrl) {\n      return <i class=\"fas fa-user\"></i>\n    } else {\n      return (\n        <div>\n          <img src={imageUrl} />\n        </div>\n      )\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div className={`modal ${active}`}>\n        <div class=\"modal-background\"></div>\n        <div class=\"modal-content\">\n          <div class=\"file is-boxed\" >\n            <label class=\"file-label\">\n              <input class=\"file-input\" type=\"file\" name=\"resume\" onChange={handleImage} />\n              <span class=\"file-cta\">\n                <span class=\"file-icon\">\n                  <i class=\"fas fa-upload\"></i>\n                </span>\n                <span class=\"file-label\">画像を選択してください</span>\n              </span>\n            </label>\n          </div>\n          <button class=\"modal-close is-large\" aria-label=\"close\" onClick={handleClick}></button>\n        </div>\n      </div>\n      <button onClick={handleClick} class=\"button is-primary is-inverted\">\n        <span class=\"icon\">\n          <ImageViewer />\n        </span>\n      </button>\n    </div >\n  );\n}\n\nexport default Upload\n",{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":18,"column":9,"nodeType":"76","messageId":"77","endLine":18,"endColumn":15},{"ruleId":"78","severity":1,"message":"79","line":25,"column":41,"nodeType":"80","messageId":"81","endLine":25,"endColumn":43},{"ruleId":"78","severity":1,"message":"82","line":36,"column":20,"nodeType":"80","messageId":"83","endLine":36,"endColumn":22},{"ruleId":"74","severity":1,"message":"84","line":7,"column":7,"nodeType":"76","messageId":"77","endLine":7,"endColumn":25},{"ruleId":"74","severity":1,"message":"85","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},{"ruleId":"86","severity":1,"message":"87","line":16,"column":7,"nodeType":"88","endLine":20,"endColumn":8},{"ruleId":"86","severity":1,"message":"87","line":21,"column":7,"nodeType":"88","endLine":25,"endColumn":8},{"ruleId":"86","severity":1,"message":"87","line":26,"column":7,"nodeType":"88","endLine":30,"endColumn":8},{"ruleId":"74","severity":1,"message":"89","line":5,"column":10,"nodeType":"76","messageId":"77","endLine":5,"endColumn":18},{"ruleId":"90","severity":1,"message":"91","line":28,"column":11,"nodeType":"88","endLine":28,"endColumn":33},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'getKey' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","expectedInside","'handleClickChecBox' is assigned a value but never used.","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'firebase' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]